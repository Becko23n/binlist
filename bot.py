import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

BOT_TOKEN = "8198164270:AAGpRymPmXUxPpeRbUYZC5maVSfJJmcLk-Q"
RAPIDAPI_KEY = "a08b0e3a2cmshec1e7d909ca702ep15a71bjsnb53e7970f357"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã ¬°Hola! Env√≠ame un n√∫mero BIN (6 d√≠gitos) y te dir√© lo que s√© üß†")

def consultar_bin(bin_code):
    url = "https://bin-ip-checker.p.rapidapi.com/"
    headers = {
        "Content-Type": "application/json",
        "X-RapidAPI-Key": RAPIDAPI_KEY,
        "X-RapidAPI-Host": "bin-ip-checker.p.rapidapi.com"
    }
    payload = {
        "bin": bin_code,
        "ip": "2.56.188.79"
    }

    response = requests.post(url, json=payload, headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        print("‚ùå Error:", response.status_code, response.text)
        return None

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    texto = update.message.text.strip()
    if not texto.isdigit() or len(texto) < 6:
        await update.message.reply_text("‚ùó Env√≠ame un BIN v√°lido (6 d√≠gitos)")
        return

    bin_code = texto[:6]
    data = consultar_bin(bin_code)

    if data and data.get("BIN"):
        bin_data = data["BIN"]
        mensaje = (
            f"üí≥ Marca: {bin_data.get('scheme', 'N/A')}
"
            f"üßæ Tipo: {bin_data.get('type', 'N/A')}
"
            f"üè¶ Banco: {bin_data.get('issuer', {}).get('name', 'N/A')}
"
            f"üåç Pa√≠s: {bin_data.get('country', {}).get('name', 'N/A')} {bin_data.get('country', {}).get('flag', '')}"
        )
    else:
        mensaje = "‚ùå No se encontr√≥ informaci√≥n para ese BIN."

    await update.message.reply_text(mensaje)

if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()